from bs4 import BeautifulSoup
from urllib.parse import unquote
from langchain_openai import ChatOpenAI
from langchain.prompts import ChatPromptTemplate
from langchain.schema.output_parser import StrOutputParser

def answer_from_summary(json_fragment, question):
    """
    Queries GPT-4o-mini with a question about a JSON fragment.

    Args:
        json_fragment (str): The JSON fragment as a string.
        question (str): The question to ask about the JSON data.

    Returns:
        str: The answer generated by GPT-4o-mini.
    """

    try:
        # Initialize the ChatOpenAI model, specifying gpt-4o-mini
        llm = ChatOpenAI(model="gpt-4o-mini", temperature=0) # gpt-4o-preview is the correct model name.

        # Create a prompt template
        prompt = ChatPromptTemplate.from_messages([
            ("system", "You are an expert at extracting information from JSON data."),
            ("user", "Here is the JSON data, optionally comprising paper titles, abstracts, and lists of authors including their affiliations or biosketches:\n\n{json_fragment}\n\nQuestion: {question}\n\nAnswer:")
        ])

        # Create a chain
        chain = prompt | llm | StrOutputParser()

        # Invoke the chain
        answer = chain.invoke({"title": json_fragment['title'], "question": question, "json_fragment": json_fragment})

        return answer

    except Exception as e:
        return f"An error occurred: {e}"


def summarize_web_page(content: str) -> str:
    """
    Use LangChain to summarize the content of a web page.
    """
    try:
        # Initialize the LLM (e.g., OpenAI GPT)
        llm = ChatOpenAI(model="gpt-4o-mini", temperature=0)

        prompt = ChatPromptTemplate.from_messages([
            ("system", "You are a helpful assistant that summarizes author biographical information from HTML content."),
            ("user", "Summarize the author info from the following HTML:\n\n{html}"),
        ])

        chain = prompt | llm | StrOutputParser()

        summary = chain.invoke({"html": content})
        return summary
    except Exception as e:
        print(f"Error summarizing web page content: {e}")
        return "Summary could not be generated."

